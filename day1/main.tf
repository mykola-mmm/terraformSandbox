terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.16"
    }
  }

  required_version = ">= 1.2.0"
}

provider "aws" {
  region = var.region
}
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "my-vpc"
  }
}

resource "aws_subnet" "frontend_subnet" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"
  depends_on = [aws_vpc.my_vpc]

  tags = {
    Name = "frontend-subnet"
  }
}

resource "aws_subnet" "backend_subnet" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.2.0/24"
  depends_on = [aws_vpc.my_vpc]

  tags = {
    Name = "backend-subnet"
  }
}

resource "aws_subnet" "db_subnet" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.3.0/24"
  depends_on = [aws_vpc.my_vpc]

  tags = {
    Name = "db-subnet"
  }
}

resource "aws_security_group" "ssh_access" {
  name        = "SSHAccess"
  description = "Allow inbound SSH traffic"
  vpc_id      = aws_vpc.my_vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "SSHAccess"
  }
}

resource "tls_private_key" "pri_key" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "aws_key_pair" "generated_key" {
  key_name   = "keypair"
  public_key = tls_private_key.pri_key.public_key_openssh

  provisioner "local-exec" {
    command = "echo '${tls_private_key.pri_key.private_key_pem}' > ./my-keypair.pem"
  }
}

output "ssh_key" {
  description = "ssh key generated by terraform"
  sensitive   = true
  value       = tls_private_key.pri_key.private_key_pem
}

resource "aws_instance" "app_server" {
  ami           = "ami-0faab6bdbac9486fb"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.backend_subnet.id
  key_name      = aws_key_pair.generated_key.key_name

  tags = {
    Name = "ExampleAppServerInstance"
  }

  associate_public_ip_address = true
}
